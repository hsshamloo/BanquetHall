#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BanquetDataBase")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAuthenticationTable(AuthenticationTable instance);
  partial void UpdateAuthenticationTable(AuthenticationTable instance);
  partial void DeleteAuthenticationTable(AuthenticationTable instance);
  partial void InsertFoodInfoTable(FoodInfoTable instance);
  partial void UpdateFoodInfoTable(FoodInfoTable instance);
  partial void DeleteFoodInfoTable(FoodInfoTable instance);
  partial void InsertImagesTable(ImagesTable instance);
  partial void UpdateImagesTable(ImagesTable instance);
  partial void DeleteImagesTable(ImagesTable instance);
  partial void InsertItemInWareHouseInfoTable(ItemInWareHouseInfoTable instance);
  partial void UpdateItemInWareHouseInfoTable(ItemInWareHouseInfoTable instance);
  partial void DeleteItemInWareHouseInfoTable(ItemInWareHouseInfoTable instance);
  partial void InsertReservationTable(ReservationTable instance);
  partial void UpdateReservationTable(ReservationTable instance);
  partial void DeleteReservationTable(ReservationTable instance);
  partial void InsertReceptionsHallTable(ReceptionsHallTable instance);
  partial void UpdateReceptionsHallTable(ReceptionsHallTable instance);
  partial void DeleteReceptionsHallTable(ReceptionsHallTable instance);
  partial void InsertMembershipTable(MembershipTable instance);
  partial void UpdateMembershipTable(MembershipTable instance);
  partial void DeleteMembershipTable(MembershipTable instance);
  partial void InsertFoodOrderTable(FoodOrderTable instance);
  partial void UpdateFoodOrderTable(FoodOrderTable instance);
  partial void DeleteFoodOrderTable(FoodOrderTable instance);
  partial void InsertBillTable(BillTable instance);
  partial void UpdateBillTable(BillTable instance);
  partial void DeleteBillTable(BillTable instance);
  partial void InsertItemOrderInfoTable(ItemOrderInfoTable instance);
  partial void UpdateItemOrderInfoTable(ItemOrderInfoTable instance);
  partial void DeleteItemOrderInfoTable(ItemOrderInfoTable instance);
  partial void InsertMessageTable(MessageTable instance);
  partial void UpdateMessageTable(MessageTable instance);
  partial void DeleteMessageTable(MessageTable instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BanquetDataBaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<AuthenticationTable> AuthenticationTables
	{
		get
		{
			return this.GetTable<AuthenticationTable>();
		}
	}
	
	public System.Data.Linq.Table<FoodInfoTable> FoodInfoTables
	{
		get
		{
			return this.GetTable<FoodInfoTable>();
		}
	}
	
	public System.Data.Linq.Table<ImagesTable> ImagesTables
	{
		get
		{
			return this.GetTable<ImagesTable>();
		}
	}
	
	public System.Data.Linq.Table<ItemInWareHouseInfoTable> ItemInWareHouseInfoTables
	{
		get
		{
			return this.GetTable<ItemInWareHouseInfoTable>();
		}
	}
	
	public System.Data.Linq.Table<ReservationTable> ReservationTables
	{
		get
		{
			return this.GetTable<ReservationTable>();
		}
	}
	
	public System.Data.Linq.Table<ReceptionsHallTable> ReceptionsHallTables
	{
		get
		{
			return this.GetTable<ReceptionsHallTable>();
		}
	}
	
	public System.Data.Linq.Table<MembershipTable> MembershipTables
	{
		get
		{
			return this.GetTable<MembershipTable>();
		}
	}
	
	public System.Data.Linq.Table<FoodOrderTable> FoodOrderTables
	{
		get
		{
			return this.GetTable<FoodOrderTable>();
		}
	}
	
	public System.Data.Linq.Table<BillTable> BillTables
	{
		get
		{
			return this.GetTable<BillTable>();
		}
	}
	
	public System.Data.Linq.Table<ItemOrderInfoTable> ItemOrderInfoTables
	{
		get
		{
			return this.GetTable<ItemOrderInfoTable>();
		}
	}
	
	public System.Data.Linq.Table<MessageTable> MessageTables
	{
		get
		{
			return this.GetTable<MessageTable>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthenticationTable")]
public partial class AuthenticationTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _UserId;
	
	private string _Email;
	
	private string _Password;
	
	private EntityRef<MembershipTable> _MembershipTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
	
	public AuthenticationTable()
	{
		this._MembershipTable = default(EntityRef<MembershipTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				if (this._MembershipTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipTable_AuthenticationTable", Storage="_MembershipTable", ThisKey="Email", OtherKey="Email", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public MembershipTable MembershipTable
	{
		get
		{
			return this._MembershipTable.Entity;
		}
		set
		{
			MembershipTable previousValue = this._MembershipTable.Entity;
			if (((previousValue != value) 
						|| (this._MembershipTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MembershipTable.Entity = null;
					previousValue.AuthenticationTable = null;
				}
				this._MembershipTable.Entity = value;
				if ((value != null))
				{
					value.AuthenticationTable = this;
					this._Email = value.Email;
				}
				else
				{
					this._Email = default(string);
				}
				this.SendPropertyChanged("MembershipTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FoodInfoTable")]
public partial class FoodInfoTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _FoodId;
	
	private string _FoodName;
	
	private string _FoodType;
	
	private decimal _Price;
	
	private EntitySet<FoodOrderTable> _FoodOrderTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFoodIdChanging(string value);
    partial void OnFoodIdChanged();
    partial void OnFoodNameChanging(string value);
    partial void OnFoodNameChanged();
    partial void OnFoodTypeChanging(string value);
    partial void OnFoodTypeChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
	
	public FoodInfoTable()
	{
		this._FoodOrderTables = new EntitySet<FoodOrderTable>(new Action<FoodOrderTable>(this.attach_FoodOrderTables), new Action<FoodOrderTable>(this.detach_FoodOrderTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodId", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string FoodId
	{
		get
		{
			return this._FoodId;
		}
		set
		{
			if ((this._FoodId != value))
			{
				this.OnFoodIdChanging(value);
				this.SendPropertyChanging();
				this._FoodId = value;
				this.SendPropertyChanged("FoodId");
				this.OnFoodIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string FoodName
	{
		get
		{
			return this._FoodName;
		}
		set
		{
			if ((this._FoodName != value))
			{
				this.OnFoodNameChanging(value);
				this.SendPropertyChanging();
				this._FoodName = value;
				this.SendPropertyChanged("FoodName");
				this.OnFoodNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string FoodType
	{
		get
		{
			return this._FoodType;
		}
		set
		{
			if ((this._FoodType != value))
			{
				this.OnFoodTypeChanging(value);
				this.SendPropertyChanging();
				this._FoodType = value;
				this.SendPropertyChanged("FoodType");
				this.OnFoodTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodInfoTable_FoodOrderTable", Storage="_FoodOrderTables", ThisKey="FoodId", OtherKey="FoodID")]
	public EntitySet<FoodOrderTable> FoodOrderTables
	{
		get
		{
			return this._FoodOrderTables;
		}
		set
		{
			this._FoodOrderTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_FoodOrderTables(FoodOrderTable entity)
	{
		this.SendPropertyChanging();
		entity.FoodInfoTable = this;
	}
	
	private void detach_FoodOrderTables(FoodOrderTable entity)
	{
		this.SendPropertyChanging();
		entity.FoodInfoTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImagesTable")]
public partial class ImagesTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ImageId;
	
	private string _ImageName;
	
	private string _ObjectID;
	
	private System.Data.Linq.Binary _ImageFile;
	
	private System.Nullable<double> _ImageHeight;
	
	private System.Nullable<double> _ImageWeight;
	
	private EntityRef<ReceptionsHallTable> _ReceptionsHallTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIdChanging(string value);
    partial void OnImageIdChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnObjectIDChanging(string value);
    partial void OnObjectIDChanged();
    partial void OnImageFileChanging(System.Data.Linq.Binary value);
    partial void OnImageFileChanged();
    partial void OnImageHeightChanging(System.Nullable<double> value);
    partial void OnImageHeightChanged();
    partial void OnImageWeightChanging(System.Nullable<double> value);
    partial void OnImageWeightChanged();
    #endregion
	
	public ImagesTable()
	{
		this._ReceptionsHallTable = default(EntityRef<ReceptionsHallTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ImageId
	{
		get
		{
			return this._ImageId;
		}
		set
		{
			if ((this._ImageId != value))
			{
				this.OnImageIdChanging(value);
				this.SendPropertyChanging();
				this._ImageId = value;
				this.SendPropertyChanged("ImageId");
				this.OnImageIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ImageName
	{
		get
		{
			return this._ImageName;
		}
		set
		{
			if ((this._ImageName != value))
			{
				this.OnImageNameChanging(value);
				this.SendPropertyChanging();
				this._ImageName = value;
				this.SendPropertyChanged("ImageName");
				this.OnImageNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string ObjectID
	{
		get
		{
			return this._ObjectID;
		}
		set
		{
			if ((this._ObjectID != value))
			{
				if (this._ReceptionsHallTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnObjectIDChanging(value);
				this.SendPropertyChanging();
				this._ObjectID = value;
				this.SendPropertyChanged("ObjectID");
				this.OnObjectIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFile", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary ImageFile
	{
		get
		{
			return this._ImageFile;
		}
		set
		{
			if ((this._ImageFile != value))
			{
				this.OnImageFileChanging(value);
				this.SendPropertyChanging();
				this._ImageFile = value;
				this.SendPropertyChanged("ImageFile");
				this.OnImageFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageHeight", DbType="Float")]
	public System.Nullable<double> ImageHeight
	{
		get
		{
			return this._ImageHeight;
		}
		set
		{
			if ((this._ImageHeight != value))
			{
				this.OnImageHeightChanging(value);
				this.SendPropertyChanging();
				this._ImageHeight = value;
				this.SendPropertyChanged("ImageHeight");
				this.OnImageHeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageWeight", DbType="Float")]
	public System.Nullable<double> ImageWeight
	{
		get
		{
			return this._ImageWeight;
		}
		set
		{
			if ((this._ImageWeight != value))
			{
				this.OnImageWeightChanging(value);
				this.SendPropertyChanging();
				this._ImageWeight = value;
				this.SendPropertyChanged("ImageWeight");
				this.OnImageWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceptionsHallTable_ImagesTable", Storage="_ReceptionsHallTable", ThisKey="ObjectID", OtherKey="ReHallId1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public ReceptionsHallTable ReceptionsHallTable
	{
		get
		{
			return this._ReceptionsHallTable.Entity;
		}
		set
		{
			ReceptionsHallTable previousValue = this._ReceptionsHallTable.Entity;
			if (((previousValue != value) 
						|| (this._ReceptionsHallTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ReceptionsHallTable.Entity = null;
					previousValue.ImagesTables.Remove(this);
				}
				this._ReceptionsHallTable.Entity = value;
				if ((value != null))
				{
					value.ImagesTables.Add(this);
					this._ObjectID = value.ReHallId1;
				}
				else
				{
					this._ObjectID = default(string);
				}
				this.SendPropertyChanged("ReceptionsHallTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemInWareHouseInfoTable")]
public partial class ItemInWareHouseInfoTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ItemId;
	
	private string _ItemName;
	
	private string _ItemType;
	
	private int _NumberOfAvailable;
	
	private string _StatusOfItem;
	
	private decimal _Price;
	
	private EntitySet<ItemOrderInfoTable> _ItemOrderInfoTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(string value);
    partial void OnItemIdChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemTypeChanging(string value);
    partial void OnItemTypeChanged();
    partial void OnNumberOfAvailableChanging(int value);
    partial void OnNumberOfAvailableChanged();
    partial void OnStatusOfItemChanging(string value);
    partial void OnStatusOfItemChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
	
	public ItemInWareHouseInfoTable()
	{
		this._ItemOrderInfoTables = new EntitySet<ItemOrderInfoTable>(new Action<ItemOrderInfoTable>(this.attach_ItemOrderInfoTables), new Action<ItemOrderInfoTable>(this.detach_ItemOrderInfoTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ItemId
	{
		get
		{
			return this._ItemId;
		}
		set
		{
			if ((this._ItemId != value))
			{
				this.OnItemIdChanging(value);
				this.SendPropertyChanging();
				this._ItemId = value;
				this.SendPropertyChanged("ItemId");
				this.OnItemIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string ItemName
	{
		get
		{
			return this._ItemName;
		}
		set
		{
			if ((this._ItemName != value))
			{
				this.OnItemNameChanging(value);
				this.SendPropertyChanging();
				this._ItemName = value;
				this.SendPropertyChanged("ItemName");
				this.OnItemNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string ItemType
	{
		get
		{
			return this._ItemType;
		}
		set
		{
			if ((this._ItemType != value))
			{
				this.OnItemTypeChanging(value);
				this.SendPropertyChanging();
				this._ItemType = value;
				this.SendPropertyChanged("ItemType");
				this.OnItemTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfAvailable", DbType="Int NOT NULL")]
	public int NumberOfAvailable
	{
		get
		{
			return this._NumberOfAvailable;
		}
		set
		{
			if ((this._NumberOfAvailable != value))
			{
				this.OnNumberOfAvailableChanging(value);
				this.SendPropertyChanging();
				this._NumberOfAvailable = value;
				this.SendPropertyChanged("NumberOfAvailable");
				this.OnNumberOfAvailableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusOfItem", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string StatusOfItem
	{
		get
		{
			return this._StatusOfItem;
		}
		set
		{
			if ((this._StatusOfItem != value))
			{
				this.OnStatusOfItemChanging(value);
				this.SendPropertyChanging();
				this._StatusOfItem = value;
				this.SendPropertyChanged("StatusOfItem");
				this.OnStatusOfItemChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemInWareHouseInfoTable_ItemOrderInfoTable", Storage="_ItemOrderInfoTables", ThisKey="ItemId", OtherKey="ItemId")]
	public EntitySet<ItemOrderInfoTable> ItemOrderInfoTables
	{
		get
		{
			return this._ItemOrderInfoTables;
		}
		set
		{
			this._ItemOrderInfoTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ItemOrderInfoTables(ItemOrderInfoTable entity)
	{
		this.SendPropertyChanging();
		entity.ItemInWareHouseInfoTable = this;
	}
	
	private void detach_ItemOrderInfoTables(ItemOrderInfoTable entity)
	{
		this.SendPropertyChanging();
		entity.ItemInWareHouseInfoTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReservationTable")]
public partial class ReservationTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ReservationId;
	
	private string _ReHallId;
	
	private System.DateTime _ReserveDate;
	
	private int _NumberOfGuest;
	
	private string _TypeOfParty;
	
	private string _Email;
	
	private System.DateTime _SubmitDate;
	
	private string _CostumerMessage;
	
	private string _CostumerName;
	
	private decimal _PriceOfReserv;
	
	private string _StatusOfReserve;
	
	private EntitySet<FoodOrderTable> _FoodOrderTables;
	
	private EntitySet<BillTable> _BillTables;
	
	private EntityRef<ReceptionsHallTable> _ReceptionsHallTable;
	
	private EntityRef<MembershipTable> _MembershipTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReservationIdChanging(string value);
    partial void OnReservationIdChanged();
    partial void OnReHallIdChanging(string value);
    partial void OnReHallIdChanged();
    partial void OnReserveDateChanging(System.DateTime value);
    partial void OnReserveDateChanged();
    partial void OnNumberOfGuestChanging(int value);
    partial void OnNumberOfGuestChanged();
    partial void OnTypeOfPartyChanging(string value);
    partial void OnTypeOfPartyChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSubmitDateChanging(System.DateTime value);
    partial void OnSubmitDateChanged();
    partial void OnCostumerMessageChanging(string value);
    partial void OnCostumerMessageChanged();
    partial void OnCostumerNameChanging(string value);
    partial void OnCostumerNameChanged();
    partial void OnPriceOfReservChanging(decimal value);
    partial void OnPriceOfReservChanged();
    partial void OnStatusOfReserveChanging(string value);
    partial void OnStatusOfReserveChanged();
    #endregion
	
	public ReservationTable()
	{
		this._FoodOrderTables = new EntitySet<FoodOrderTable>(new Action<FoodOrderTable>(this.attach_FoodOrderTables), new Action<FoodOrderTable>(this.detach_FoodOrderTables));
		this._BillTables = new EntitySet<BillTable>(new Action<BillTable>(this.attach_BillTables), new Action<BillTable>(this.detach_BillTables));
		this._ReceptionsHallTable = default(EntityRef<ReceptionsHallTable>);
		this._MembershipTable = default(EntityRef<MembershipTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationId", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ReservationId
	{
		get
		{
			return this._ReservationId;
		}
		set
		{
			if ((this._ReservationId != value))
			{
				this.OnReservationIdChanging(value);
				this.SendPropertyChanging();
				this._ReservationId = value;
				this.SendPropertyChanged("ReservationId");
				this.OnReservationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReHallId", DbType="VarChar(25)")]
	public string ReHallId
	{
		get
		{
			return this._ReHallId;
		}
		set
		{
			if ((this._ReHallId != value))
			{
				if (this._ReceptionsHallTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnReHallIdChanging(value);
				this.SendPropertyChanging();
				this._ReHallId = value;
				this.SendPropertyChanged("ReHallId");
				this.OnReHallIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveDate", DbType="Date NOT NULL")]
	public System.DateTime ReserveDate
	{
		get
		{
			return this._ReserveDate;
		}
		set
		{
			if ((this._ReserveDate != value))
			{
				this.OnReserveDateChanging(value);
				this.SendPropertyChanging();
				this._ReserveDate = value;
				this.SendPropertyChanged("ReserveDate");
				this.OnReserveDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfGuest", DbType="Int NOT NULL")]
	public int NumberOfGuest
	{
		get
		{
			return this._NumberOfGuest;
		}
		set
		{
			if ((this._NumberOfGuest != value))
			{
				this.OnNumberOfGuestChanging(value);
				this.SendPropertyChanging();
				this._NumberOfGuest = value;
				this.SendPropertyChanged("NumberOfGuest");
				this.OnNumberOfGuestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfParty", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string TypeOfParty
	{
		get
		{
			return this._TypeOfParty;
		}
		set
		{
			if ((this._TypeOfParty != value))
			{
				this.OnTypeOfPartyChanging(value);
				this.SendPropertyChanging();
				this._TypeOfParty = value;
				this.SendPropertyChanged("TypeOfParty");
				this.OnTypeOfPartyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				if (this._MembershipTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitDate", DbType="Date NOT NULL")]
	public System.DateTime SubmitDate
	{
		get
		{
			return this._SubmitDate;
		}
		set
		{
			if ((this._SubmitDate != value))
			{
				this.OnSubmitDateChanging(value);
				this.SendPropertyChanging();
				this._SubmitDate = value;
				this.SendPropertyChanged("SubmitDate");
				this.OnSubmitDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostumerMessage", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string CostumerMessage
	{
		get
		{
			return this._CostumerMessage;
		}
		set
		{
			if ((this._CostumerMessage != value))
			{
				this.OnCostumerMessageChanging(value);
				this.SendPropertyChanging();
				this._CostumerMessage = value;
				this.SendPropertyChanged("CostumerMessage");
				this.OnCostumerMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostumerName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
	public string CostumerName
	{
		get
		{
			return this._CostumerName;
		}
		set
		{
			if ((this._CostumerName != value))
			{
				this.OnCostumerNameChanging(value);
				this.SendPropertyChanging();
				this._CostumerName = value;
				this.SendPropertyChanged("CostumerName");
				this.OnCostumerNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceOfReserv", DbType="Money NOT NULL")]
	public decimal PriceOfReserv
	{
		get
		{
			return this._PriceOfReserv;
		}
		set
		{
			if ((this._PriceOfReserv != value))
			{
				this.OnPriceOfReservChanging(value);
				this.SendPropertyChanging();
				this._PriceOfReserv = value;
				this.SendPropertyChanged("PriceOfReserv");
				this.OnPriceOfReservChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusOfReserve", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string StatusOfReserve
	{
		get
		{
			return this._StatusOfReserve;
		}
		set
		{
			if ((this._StatusOfReserve != value))
			{
				this.OnStatusOfReserveChanging(value);
				this.SendPropertyChanging();
				this._StatusOfReserve = value;
				this.SendPropertyChanged("StatusOfReserve");
				this.OnStatusOfReserveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReservationTable_FoodOrderTable", Storage="_FoodOrderTables", ThisKey="ReservationId", OtherKey="ReservationId")]
	public EntitySet<FoodOrderTable> FoodOrderTables
	{
		get
		{
			return this._FoodOrderTables;
		}
		set
		{
			this._FoodOrderTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReservationTable_BillTable", Storage="_BillTables", ThisKey="ReservationId", OtherKey="ReservationId")]
	public EntitySet<BillTable> BillTables
	{
		get
		{
			return this._BillTables;
		}
		set
		{
			this._BillTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceptionsHallTable_ReservationTable", Storage="_ReceptionsHallTable", ThisKey="ReHallId", OtherKey="ReHallId1", IsForeignKey=true)]
	public ReceptionsHallTable ReceptionsHallTable
	{
		get
		{
			return this._ReceptionsHallTable.Entity;
		}
		set
		{
			ReceptionsHallTable previousValue = this._ReceptionsHallTable.Entity;
			if (((previousValue != value) 
						|| (this._ReceptionsHallTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ReceptionsHallTable.Entity = null;
					previousValue.ReservationTables.Remove(this);
				}
				this._ReceptionsHallTable.Entity = value;
				if ((value != null))
				{
					value.ReservationTables.Add(this);
					this._ReHallId = value.ReHallId1;
				}
				else
				{
					this._ReHallId = default(string);
				}
				this.SendPropertyChanged("ReceptionsHallTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipTable_ReservationTable", Storage="_MembershipTable", ThisKey="Email", OtherKey="Email", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public MembershipTable MembershipTable
	{
		get
		{
			return this._MembershipTable.Entity;
		}
		set
		{
			MembershipTable previousValue = this._MembershipTable.Entity;
			if (((previousValue != value) 
						|| (this._MembershipTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MembershipTable.Entity = null;
					previousValue.ReservationTables.Remove(this);
				}
				this._MembershipTable.Entity = value;
				if ((value != null))
				{
					value.ReservationTables.Add(this);
					this._Email = value.Email;
				}
				else
				{
					this._Email = default(string);
				}
				this.SendPropertyChanged("MembershipTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_FoodOrderTables(FoodOrderTable entity)
	{
		this.SendPropertyChanging();
		entity.ReservationTable = this;
	}
	
	private void detach_FoodOrderTables(FoodOrderTable entity)
	{
		this.SendPropertyChanging();
		entity.ReservationTable = null;
	}
	
	private void attach_BillTables(BillTable entity)
	{
		this.SendPropertyChanging();
		entity.ReservationTable = this;
	}
	
	private void detach_BillTables(BillTable entity)
	{
		this.SendPropertyChanging();
		entity.ReservationTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceptionsHallTable")]
public partial class ReceptionsHallTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ReHallId1;
	
	private string _ReHallName;
	
	private int _ReHallCapacity;
	
	private decimal _ReHallCostPerPerson;
	
	private System.Nullable<decimal> _ReHallCostFullCapacity;
	
	private string _ReHallType;
	
	private string _FullDescription;
	
	private EntitySet<ImagesTable> _ImagesTables;
	
	private EntitySet<ReservationTable> _ReservationTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReHallId1Changing(string value);
    partial void OnReHallId1Changed();
    partial void OnReHallNameChanging(string value);
    partial void OnReHallNameChanged();
    partial void OnReHallCapacityChanging(int value);
    partial void OnReHallCapacityChanged();
    partial void OnReHallCostPerPersonChanging(decimal value);
    partial void OnReHallCostPerPersonChanged();
    partial void OnReHallCostFullCapacityChanging(System.Nullable<decimal> value);
    partial void OnReHallCostFullCapacityChanged();
    partial void OnReHallTypeChanging(string value);
    partial void OnReHallTypeChanged();
    partial void OnFullDescriptionChanging(string value);
    partial void OnFullDescriptionChanged();
    #endregion
	
	public ReceptionsHallTable()
	{
		this._ImagesTables = new EntitySet<ImagesTable>(new Action<ImagesTable>(this.attach_ImagesTables), new Action<ImagesTable>(this.detach_ImagesTables));
		this._ReservationTables = new EntitySet<ReservationTable>(new Action<ReservationTable>(this.attach_ReservationTables), new Action<ReservationTable>(this.detach_ReservationTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReHallId1", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ReHallId1
	{
		get
		{
			return this._ReHallId1;
		}
		set
		{
			if ((this._ReHallId1 != value))
			{
				this.OnReHallId1Changing(value);
				this.SendPropertyChanging();
				this._ReHallId1 = value;
				this.SendPropertyChanged("ReHallId1");
				this.OnReHallId1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReHallName", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
	public string ReHallName
	{
		get
		{
			return this._ReHallName;
		}
		set
		{
			if ((this._ReHallName != value))
			{
				this.OnReHallNameChanging(value);
				this.SendPropertyChanging();
				this._ReHallName = value;
				this.SendPropertyChanged("ReHallName");
				this.OnReHallNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReHallCapacity", DbType="Int NOT NULL")]
	public int ReHallCapacity
	{
		get
		{
			return this._ReHallCapacity;
		}
		set
		{
			if ((this._ReHallCapacity != value))
			{
				this.OnReHallCapacityChanging(value);
				this.SendPropertyChanging();
				this._ReHallCapacity = value;
				this.SendPropertyChanged("ReHallCapacity");
				this.OnReHallCapacityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReHallCostPerPerson", DbType="Money NOT NULL")]
	public decimal ReHallCostPerPerson
	{
		get
		{
			return this._ReHallCostPerPerson;
		}
		set
		{
			if ((this._ReHallCostPerPerson != value))
			{
				this.OnReHallCostPerPersonChanging(value);
				this.SendPropertyChanging();
				this._ReHallCostPerPerson = value;
				this.SendPropertyChanged("ReHallCostPerPerson");
				this.OnReHallCostPerPersonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReHallCostFullCapacity", AutoSync=AutoSync.Always, DbType="Money", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
	public System.Nullable<decimal> ReHallCostFullCapacity
	{
		get
		{
			return this._ReHallCostFullCapacity;
		}
		set
		{
			if ((this._ReHallCostFullCapacity != value))
			{
				this.OnReHallCostFullCapacityChanging(value);
				this.SendPropertyChanging();
				this._ReHallCostFullCapacity = value;
				this.SendPropertyChanged("ReHallCostFullCapacity");
				this.OnReHallCostFullCapacityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReHallType", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string ReHallType
	{
		get
		{
			return this._ReHallType;
		}
		set
		{
			if ((this._ReHallType != value))
			{
				this.OnReHallTypeChanging(value);
				this.SendPropertyChanging();
				this._ReHallType = value;
				this.SendPropertyChanged("ReHallType");
				this.OnReHallTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string FullDescription
	{
		get
		{
			return this._FullDescription;
		}
		set
		{
			if ((this._FullDescription != value))
			{
				this.OnFullDescriptionChanging(value);
				this.SendPropertyChanging();
				this._FullDescription = value;
				this.SendPropertyChanged("FullDescription");
				this.OnFullDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceptionsHallTable_ImagesTable", Storage="_ImagesTables", ThisKey="ReHallId1", OtherKey="ObjectID")]
	public EntitySet<ImagesTable> ImagesTables
	{
		get
		{
			return this._ImagesTables;
		}
		set
		{
			this._ImagesTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceptionsHallTable_ReservationTable", Storage="_ReservationTables", ThisKey="ReHallId1", OtherKey="ReHallId")]
	public EntitySet<ReservationTable> ReservationTables
	{
		get
		{
			return this._ReservationTables;
		}
		set
		{
			this._ReservationTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ImagesTables(ImagesTable entity)
	{
		this.SendPropertyChanging();
		entity.ReceptionsHallTable = this;
	}
	
	private void detach_ImagesTables(ImagesTable entity)
	{
		this.SendPropertyChanging();
		entity.ReceptionsHallTable = null;
	}
	
	private void attach_ReservationTables(ReservationTable entity)
	{
		this.SendPropertyChanging();
		entity.ReceptionsHallTable = this;
	}
	
	private void detach_ReservationTables(ReservationTable entity)
	{
		this.SendPropertyChanging();
		entity.ReceptionsHallTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembershipTable")]
public partial class MembershipTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Email;
	
	private string _UserId;
	
	private string _Gender;
	
	private string _FName;
	
	private string _LName;
	
	private string _TelphoneNumber;
	
	private string _Country;
	
	private string _Province;
	
	private string _City;
	
	private string _Address;
	
	private string _RoleType;
	
	private System.Nullable<System.DateTime> _RegisterDate;
	
	private EntityRef<AuthenticationTable> _AuthenticationTable;
	
	private EntitySet<ReservationTable> _ReservationTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnTelphoneNumberChanging(string value);
    partial void OnTelphoneNumberChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnRoleTypeChanging(string value);
    partial void OnRoleTypeChanged();
    partial void OnRegisterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterDateChanged();
    #endregion
	
	public MembershipTable()
	{
		this._AuthenticationTable = default(EntityRef<AuthenticationTable>);
		this._ReservationTables = new EntitySet<ReservationTable>(new Action<ReservationTable>(this.attach_ReservationTables), new Action<ReservationTable>(this.detach_ReservationTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string FName
	{
		get
		{
			return this._FName;
		}
		set
		{
			if ((this._FName != value))
			{
				this.OnFNameChanging(value);
				this.SendPropertyChanging();
				this._FName = value;
				this.SendPropertyChanged("FName");
				this.OnFNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string LName
	{
		get
		{
			return this._LName;
		}
		set
		{
			if ((this._LName != value))
			{
				this.OnLNameChanging(value);
				this.SendPropertyChanging();
				this._LName = value;
				this.SendPropertyChanged("LName");
				this.OnLNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelphoneNumber", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
	public string TelphoneNumber
	{
		get
		{
			return this._TelphoneNumber;
		}
		set
		{
			if ((this._TelphoneNumber != value))
			{
				this.OnTelphoneNumberChanging(value);
				this.SendPropertyChanging();
				this._TelphoneNumber = value;
				this.SendPropertyChanged("TelphoneNumber");
				this.OnTelphoneNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(50)")]
	public string Province
	{
		get
		{
			return this._Province;
		}
		set
		{
			if ((this._Province != value))
			{
				this.OnProvinceChanging(value);
				this.SendPropertyChanging();
				this._Province = value;
				this.SendPropertyChanged("Province");
				this.OnProvinceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string RoleType
	{
		get
		{
			return this._RoleType;
		}
		set
		{
			if ((this._RoleType != value))
			{
				this.OnRoleTypeChanging(value);
				this.SendPropertyChanging();
				this._RoleType = value;
				this.SendPropertyChanged("RoleType");
				this.OnRoleTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDate", DbType="Date")]
	public System.Nullable<System.DateTime> RegisterDate
	{
		get
		{
			return this._RegisterDate;
		}
		set
		{
			if ((this._RegisterDate != value))
			{
				this.OnRegisterDateChanging(value);
				this.SendPropertyChanging();
				this._RegisterDate = value;
				this.SendPropertyChanged("RegisterDate");
				this.OnRegisterDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipTable_AuthenticationTable", Storage="_AuthenticationTable", ThisKey="Email", OtherKey="Email", IsUnique=true, IsForeignKey=false)]
	public AuthenticationTable AuthenticationTable
	{
		get
		{
			return this._AuthenticationTable.Entity;
		}
		set
		{
			AuthenticationTable previousValue = this._AuthenticationTable.Entity;
			if (((previousValue != value) 
						|| (this._AuthenticationTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuthenticationTable.Entity = null;
					previousValue.MembershipTable = null;
				}
				this._AuthenticationTable.Entity = value;
				if ((value != null))
				{
					value.MembershipTable = this;
				}
				this.SendPropertyChanged("AuthenticationTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MembershipTable_ReservationTable", Storage="_ReservationTables", ThisKey="Email", OtherKey="Email")]
	public EntitySet<ReservationTable> ReservationTables
	{
		get
		{
			return this._ReservationTables;
		}
		set
		{
			this._ReservationTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ReservationTables(ReservationTable entity)
	{
		this.SendPropertyChanging();
		entity.MembershipTable = this;
	}
	
	private void detach_ReservationTables(ReservationTable entity)
	{
		this.SendPropertyChanging();
		entity.MembershipTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FoodOrderTable")]
public partial class FoodOrderTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _FoodOrderID;
	
	private string _Email;
	
	private string _FoodID;
	
	private string _FoodName;
	
	private int _Count;
	
	private decimal _Price;
	
	private string _ReservationId;
	
	private System.DateTime _SubmitDate;
	
	private string _StatusOfOrder;
	
	private EntityRef<FoodInfoTable> _FoodInfoTable;
	
	private EntityRef<ReservationTable> _ReservationTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFoodOrderIDChanging(string value);
    partial void OnFoodOrderIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFoodIDChanging(string value);
    partial void OnFoodIDChanged();
    partial void OnFoodNameChanging(string value);
    partial void OnFoodNameChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnReservationIdChanging(string value);
    partial void OnReservationIdChanged();
    partial void OnSubmitDateChanging(System.DateTime value);
    partial void OnSubmitDateChanged();
    partial void OnStatusOfOrderChanging(string value);
    partial void OnStatusOfOrderChanged();
    #endregion
	
	public FoodOrderTable()
	{
		this._FoodInfoTable = default(EntityRef<FoodInfoTable>);
		this._ReservationTable = default(EntityRef<ReservationTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodOrderID", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string FoodOrderID
	{
		get
		{
			return this._FoodOrderID;
		}
		set
		{
			if ((this._FoodOrderID != value))
			{
				this.OnFoodOrderIDChanging(value);
				this.SendPropertyChanging();
				this._FoodOrderID = value;
				this.SendPropertyChanged("FoodOrderID");
				this.OnFoodOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodID", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string FoodID
	{
		get
		{
			return this._FoodID;
		}
		set
		{
			if ((this._FoodID != value))
			{
				if (this._FoodInfoTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFoodIDChanging(value);
				this.SendPropertyChanging();
				this._FoodID = value;
				this.SendPropertyChanged("FoodID");
				this.OnFoodIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string FoodName
	{
		get
		{
			return this._FoodName;
		}
		set
		{
			if ((this._FoodName != value))
			{
				this.OnFoodNameChanging(value);
				this.SendPropertyChanging();
				this._FoodName = value;
				this.SendPropertyChanged("FoodName");
				this.OnFoodNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
	public int Count
	{
		get
		{
			return this._Count;
		}
		set
		{
			if ((this._Count != value))
			{
				this.OnCountChanging(value);
				this.SendPropertyChanging();
				this._Count = value;
				this.SendPropertyChanged("Count");
				this.OnCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationId", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string ReservationId
	{
		get
		{
			return this._ReservationId;
		}
		set
		{
			if ((this._ReservationId != value))
			{
				if (this._ReservationTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnReservationIdChanging(value);
				this.SendPropertyChanging();
				this._ReservationId = value;
				this.SendPropertyChanged("ReservationId");
				this.OnReservationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitDate", DbType="Date NOT NULL")]
	public System.DateTime SubmitDate
	{
		get
		{
			return this._SubmitDate;
		}
		set
		{
			if ((this._SubmitDate != value))
			{
				this.OnSubmitDateChanging(value);
				this.SendPropertyChanging();
				this._SubmitDate = value;
				this.SendPropertyChanged("SubmitDate");
				this.OnSubmitDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusOfOrder", DbType="NVarChar(20)")]
	public string StatusOfOrder
	{
		get
		{
			return this._StatusOfOrder;
		}
		set
		{
			if ((this._StatusOfOrder != value))
			{
				this.OnStatusOfOrderChanging(value);
				this.SendPropertyChanging();
				this._StatusOfOrder = value;
				this.SendPropertyChanged("StatusOfOrder");
				this.OnStatusOfOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodInfoTable_FoodOrderTable", Storage="_FoodInfoTable", ThisKey="FoodID", OtherKey="FoodId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public FoodInfoTable FoodInfoTable
	{
		get
		{
			return this._FoodInfoTable.Entity;
		}
		set
		{
			FoodInfoTable previousValue = this._FoodInfoTable.Entity;
			if (((previousValue != value) 
						|| (this._FoodInfoTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._FoodInfoTable.Entity = null;
					previousValue.FoodOrderTables.Remove(this);
				}
				this._FoodInfoTable.Entity = value;
				if ((value != null))
				{
					value.FoodOrderTables.Add(this);
					this._FoodID = value.FoodId;
				}
				else
				{
					this._FoodID = default(string);
				}
				this.SendPropertyChanged("FoodInfoTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReservationTable_FoodOrderTable", Storage="_ReservationTable", ThisKey="ReservationId", OtherKey="ReservationId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public ReservationTable ReservationTable
	{
		get
		{
			return this._ReservationTable.Entity;
		}
		set
		{
			ReservationTable previousValue = this._ReservationTable.Entity;
			if (((previousValue != value) 
						|| (this._ReservationTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ReservationTable.Entity = null;
					previousValue.FoodOrderTables.Remove(this);
				}
				this._ReservationTable.Entity = value;
				if ((value != null))
				{
					value.FoodOrderTables.Add(this);
					this._ReservationId = value.ReservationId;
				}
				else
				{
					this._ReservationId = default(string);
				}
				this.SendPropertyChanged("ReservationTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillTable")]
public partial class BillTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _BillId;
	
	private decimal _ReserveCharge;
	
	private decimal _FoodCharge;
	
	private decimal _ServiceCharge;
	
	private decimal _TotalCharge;
	
	private decimal _AmountPaid;
	
	private decimal _RemainedAmount;
	
	private System.DateTime _BillDate;
	
	private System.Nullable<System.DateTime> _ClearanceDate;
	
	private string _StatusOfBill;
	
	private string _Email;
	
	private string _ReservationId;
	
	private string _PayType;
	
	private EntityRef<ReservationTable> _ReservationTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillIdChanging(string value);
    partial void OnBillIdChanged();
    partial void OnReserveChargeChanging(decimal value);
    partial void OnReserveChargeChanged();
    partial void OnFoodChargeChanging(decimal value);
    partial void OnFoodChargeChanged();
    partial void OnServiceChargeChanging(decimal value);
    partial void OnServiceChargeChanged();
    partial void OnTotalChargeChanging(decimal value);
    partial void OnTotalChargeChanged();
    partial void OnAmountPaidChanging(decimal value);
    partial void OnAmountPaidChanged();
    partial void OnRemainedAmountChanging(decimal value);
    partial void OnRemainedAmountChanged();
    partial void OnBillDateChanging(System.DateTime value);
    partial void OnBillDateChanged();
    partial void OnClearanceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClearanceDateChanged();
    partial void OnStatusOfBillChanging(string value);
    partial void OnStatusOfBillChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnReservationIdChanging(string value);
    partial void OnReservationIdChanged();
    partial void OnPayTypeChanging(string value);
    partial void OnPayTypeChanged();
    #endregion
	
	public BillTable()
	{
		this._ReservationTable = default(EntityRef<ReservationTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillId", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string BillId
	{
		get
		{
			return this._BillId;
		}
		set
		{
			if ((this._BillId != value))
			{
				this.OnBillIdChanging(value);
				this.SendPropertyChanging();
				this._BillId = value;
				this.SendPropertyChanged("BillId");
				this.OnBillIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveCharge", DbType="Money NOT NULL")]
	public decimal ReserveCharge
	{
		get
		{
			return this._ReserveCharge;
		}
		set
		{
			if ((this._ReserveCharge != value))
			{
				this.OnReserveChargeChanging(value);
				this.SendPropertyChanging();
				this._ReserveCharge = value;
				this.SendPropertyChanged("ReserveCharge");
				this.OnReserveChargeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodCharge", DbType="Money NOT NULL")]
	public decimal FoodCharge
	{
		get
		{
			return this._FoodCharge;
		}
		set
		{
			if ((this._FoodCharge != value))
			{
				this.OnFoodChargeChanging(value);
				this.SendPropertyChanging();
				this._FoodCharge = value;
				this.SendPropertyChanged("FoodCharge");
				this.OnFoodChargeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCharge", DbType="Money NOT NULL")]
	public decimal ServiceCharge
	{
		get
		{
			return this._ServiceCharge;
		}
		set
		{
			if ((this._ServiceCharge != value))
			{
				this.OnServiceChargeChanging(value);
				this.SendPropertyChanging();
				this._ServiceCharge = value;
				this.SendPropertyChanged("ServiceCharge");
				this.OnServiceChargeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCharge", DbType="Money NOT NULL")]
	public decimal TotalCharge
	{
		get
		{
			return this._TotalCharge;
		}
		set
		{
			if ((this._TotalCharge != value))
			{
				this.OnTotalChargeChanging(value);
				this.SendPropertyChanging();
				this._TotalCharge = value;
				this.SendPropertyChanged("TotalCharge");
				this.OnTotalChargeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Money NOT NULL")]
	public decimal AmountPaid
	{
		get
		{
			return this._AmountPaid;
		}
		set
		{
			if ((this._AmountPaid != value))
			{
				this.OnAmountPaidChanging(value);
				this.SendPropertyChanging();
				this._AmountPaid = value;
				this.SendPropertyChanged("AmountPaid");
				this.OnAmountPaidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainedAmount", DbType="Money NOT NULL")]
	public decimal RemainedAmount
	{
		get
		{
			return this._RemainedAmount;
		}
		set
		{
			if ((this._RemainedAmount != value))
			{
				this.OnRemainedAmountChanging(value);
				this.SendPropertyChanging();
				this._RemainedAmount = value;
				this.SendPropertyChanged("RemainedAmount");
				this.OnRemainedAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDate", DbType="Date NOT NULL")]
	public System.DateTime BillDate
	{
		get
		{
			return this._BillDate;
		}
		set
		{
			if ((this._BillDate != value))
			{
				this.OnBillDateChanging(value);
				this.SendPropertyChanging();
				this._BillDate = value;
				this.SendPropertyChanged("BillDate");
				this.OnBillDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClearanceDate", DbType="Date")]
	public System.Nullable<System.DateTime> ClearanceDate
	{
		get
		{
			return this._ClearanceDate;
		}
		set
		{
			if ((this._ClearanceDate != value))
			{
				this.OnClearanceDateChanging(value);
				this.SendPropertyChanging();
				this._ClearanceDate = value;
				this.SendPropertyChanged("ClearanceDate");
				this.OnClearanceDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusOfBill", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string StatusOfBill
	{
		get
		{
			return this._StatusOfBill;
		}
		set
		{
			if ((this._StatusOfBill != value))
			{
				this.OnStatusOfBillChanging(value);
				this.SendPropertyChanging();
				this._StatusOfBill = value;
				this.SendPropertyChanged("StatusOfBill");
				this.OnStatusOfBillChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationId", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string ReservationId
	{
		get
		{
			return this._ReservationId;
		}
		set
		{
			if ((this._ReservationId != value))
			{
				if (this._ReservationTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnReservationIdChanging(value);
				this.SendPropertyChanging();
				this._ReservationId = value;
				this.SendPropertyChanged("ReservationId");
				this.OnReservationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string PayType
	{
		get
		{
			return this._PayType;
		}
		set
		{
			if ((this._PayType != value))
			{
				this.OnPayTypeChanging(value);
				this.SendPropertyChanging();
				this._PayType = value;
				this.SendPropertyChanged("PayType");
				this.OnPayTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReservationTable_BillTable", Storage="_ReservationTable", ThisKey="ReservationId", OtherKey="ReservationId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public ReservationTable ReservationTable
	{
		get
		{
			return this._ReservationTable.Entity;
		}
		set
		{
			ReservationTable previousValue = this._ReservationTable.Entity;
			if (((previousValue != value) 
						|| (this._ReservationTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ReservationTable.Entity = null;
					previousValue.BillTables.Remove(this);
				}
				this._ReservationTable.Entity = value;
				if ((value != null))
				{
					value.BillTables.Add(this);
					this._ReservationId = value.ReservationId;
				}
				else
				{
					this._ReservationId = default(string);
				}
				this.SendPropertyChanged("ReservationTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemOrderInfoTable")]
public partial class ItemOrderInfoTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ItemOrderID;
	
	private string _ItemId;
	
	private string _ItemName;
	
	private int _Count;
	
	private System.DateTime _SubmitDate;
	
	private string _StatusOfOrder;
	
	private decimal _FullPrice;
	
	private string _Email;
	
	private EntityRef<ItemInWareHouseInfoTable> _ItemInWareHouseInfoTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemOrderIDChanging(string value);
    partial void OnItemOrderIDChanged();
    partial void OnItemIdChanging(string value);
    partial void OnItemIdChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnSubmitDateChanging(System.DateTime value);
    partial void OnSubmitDateChanged();
    partial void OnStatusOfOrderChanging(string value);
    partial void OnStatusOfOrderChanged();
    partial void OnFullPriceChanging(decimal value);
    partial void OnFullPriceChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
	
	public ItemOrderInfoTable()
	{
		this._ItemInWareHouseInfoTable = default(EntityRef<ItemInWareHouseInfoTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemOrderID", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ItemOrderID
	{
		get
		{
			return this._ItemOrderID;
		}
		set
		{
			if ((this._ItemOrderID != value))
			{
				this.OnItemOrderIDChanging(value);
				this.SendPropertyChanging();
				this._ItemOrderID = value;
				this.SendPropertyChanged("ItemOrderID");
				this.OnItemOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string ItemId
	{
		get
		{
			return this._ItemId;
		}
		set
		{
			if ((this._ItemId != value))
			{
				if (this._ItemInWareHouseInfoTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnItemIdChanging(value);
				this.SendPropertyChanging();
				this._ItemId = value;
				this.SendPropertyChanged("ItemId");
				this.OnItemIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string ItemName
	{
		get
		{
			return this._ItemName;
		}
		set
		{
			if ((this._ItemName != value))
			{
				this.OnItemNameChanging(value);
				this.SendPropertyChanging();
				this._ItemName = value;
				this.SendPropertyChanged("ItemName");
				this.OnItemNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
	public int Count
	{
		get
		{
			return this._Count;
		}
		set
		{
			if ((this._Count != value))
			{
				this.OnCountChanging(value);
				this.SendPropertyChanging();
				this._Count = value;
				this.SendPropertyChanged("Count");
				this.OnCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitDate", DbType="Date NOT NULL")]
	public System.DateTime SubmitDate
	{
		get
		{
			return this._SubmitDate;
		}
		set
		{
			if ((this._SubmitDate != value))
			{
				this.OnSubmitDateChanging(value);
				this.SendPropertyChanging();
				this._SubmitDate = value;
				this.SendPropertyChanged("SubmitDate");
				this.OnSubmitDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusOfOrder", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string StatusOfOrder
	{
		get
		{
			return this._StatusOfOrder;
		}
		set
		{
			if ((this._StatusOfOrder != value))
			{
				this.OnStatusOfOrderChanging(value);
				this.SendPropertyChanging();
				this._StatusOfOrder = value;
				this.SendPropertyChanged("StatusOfOrder");
				this.OnStatusOfOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullPrice", DbType="Money NOT NULL")]
	public decimal FullPrice
	{
		get
		{
			return this._FullPrice;
		}
		set
		{
			if ((this._FullPrice != value))
			{
				this.OnFullPriceChanging(value);
				this.SendPropertyChanging();
				this._FullPrice = value;
				this.SendPropertyChanged("FullPrice");
				this.OnFullPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(40)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemInWareHouseInfoTable_ItemOrderInfoTable", Storage="_ItemInWareHouseInfoTable", ThisKey="ItemId", OtherKey="ItemId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public ItemInWareHouseInfoTable ItemInWareHouseInfoTable
	{
		get
		{
			return this._ItemInWareHouseInfoTable.Entity;
		}
		set
		{
			ItemInWareHouseInfoTable previousValue = this._ItemInWareHouseInfoTable.Entity;
			if (((previousValue != value) 
						|| (this._ItemInWareHouseInfoTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ItemInWareHouseInfoTable.Entity = null;
					previousValue.ItemOrderInfoTables.Remove(this);
				}
				this._ItemInWareHouseInfoTable.Entity = value;
				if ((value != null))
				{
					value.ItemOrderInfoTables.Add(this);
					this._ItemId = value.ItemId;
				}
				else
				{
					this._ItemId = default(string);
				}
				this.SendPropertyChanged("ItemInWareHouseInfoTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageTable")]
public partial class MessageTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MessageId;
	
	private string _MessageSender;
	
	private string _MessageReciver;
	
	private System.Nullable<System.DateTime> _SendDate;
	
	private System.Nullable<System.DateTime> _ReplyDate;
	
	private string _Subject;
	
	private string _MessageText;
	
	private string _StatusOfMessage;
	
	private string _EmailOfSender;
	
	private string _EmailOfReciver;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIdChanging(string value);
    partial void OnMessageIdChanged();
    partial void OnMessageSenderChanging(string value);
    partial void OnMessageSenderChanged();
    partial void OnMessageReciverChanging(string value);
    partial void OnMessageReciverChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnReplyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReplyDateChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnStatusOfMessageChanging(string value);
    partial void OnStatusOfMessageChanged();
    partial void OnEmailOfSenderChanging(string value);
    partial void OnEmailOfSenderChanged();
    partial void OnEmailOfReciverChanging(string value);
    partial void OnEmailOfReciverChanged();
    #endregion
	
	public MessageTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MessageId
	{
		get
		{
			return this._MessageId;
		}
		set
		{
			if ((this._MessageId != value))
			{
				this.OnMessageIdChanging(value);
				this.SendPropertyChanging();
				this._MessageId = value;
				this.SendPropertyChanged("MessageId");
				this.OnMessageIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageSender", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MessageSender
	{
		get
		{
			return this._MessageSender;
		}
		set
		{
			if ((this._MessageSender != value))
			{
				this.OnMessageSenderChanging(value);
				this.SendPropertyChanging();
				this._MessageSender = value;
				this.SendPropertyChanged("MessageSender");
				this.OnMessageSenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageReciver", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MessageReciver
	{
		get
		{
			return this._MessageReciver;
		}
		set
		{
			if ((this._MessageReciver != value))
			{
				this.OnMessageReciverChanging(value);
				this.SendPropertyChanging();
				this._MessageReciver = value;
				this.SendPropertyChanged("MessageReciver");
				this.OnMessageReciverChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="Date")]
	public System.Nullable<System.DateTime> SendDate
	{
		get
		{
			return this._SendDate;
		}
		set
		{
			if ((this._SendDate != value))
			{
				this.OnSendDateChanging(value);
				this.SendPropertyChanging();
				this._SendDate = value;
				this.SendPropertyChanged("SendDate");
				this.OnSendDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyDate", DbType="Date")]
	public System.Nullable<System.DateTime> ReplyDate
	{
		get
		{
			return this._ReplyDate;
		}
		set
		{
			if ((this._ReplyDate != value))
			{
				this.OnReplyDateChanging(value);
				this.SendPropertyChanging();
				this._ReplyDate = value;
				this.SendPropertyChanged("ReplyDate");
				this.OnReplyDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50)")]
	public string Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MessageText
	{
		get
		{
			return this._MessageText;
		}
		set
		{
			if ((this._MessageText != value))
			{
				this.OnMessageTextChanging(value);
				this.SendPropertyChanging();
				this._MessageText = value;
				this.SendPropertyChanged("MessageText");
				this.OnMessageTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusOfMessage", DbType="NVarChar(50)")]
	public string StatusOfMessage
	{
		get
		{
			return this._StatusOfMessage;
		}
		set
		{
			if ((this._StatusOfMessage != value))
			{
				this.OnStatusOfMessageChanging(value);
				this.SendPropertyChanging();
				this._StatusOfMessage = value;
				this.SendPropertyChanged("StatusOfMessage");
				this.OnStatusOfMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailOfSender", DbType="VarChar(40)")]
	public string EmailOfSender
	{
		get
		{
			return this._EmailOfSender;
		}
		set
		{
			if ((this._EmailOfSender != value))
			{
				this.OnEmailOfSenderChanging(value);
				this.SendPropertyChanging();
				this._EmailOfSender = value;
				this.SendPropertyChanged("EmailOfSender");
				this.OnEmailOfSenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailOfReciver", DbType="VarChar(40)")]
	public string EmailOfReciver
	{
		get
		{
			return this._EmailOfReciver;
		}
		set
		{
			if ((this._EmailOfReciver != value))
			{
				this.OnEmailOfReciverChanging(value);
				this.SendPropertyChanging();
				this._EmailOfReciver = value;
				this.SendPropertyChanged("EmailOfReciver");
				this.OnEmailOfReciverChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
